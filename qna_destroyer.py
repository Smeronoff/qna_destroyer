import json
import os
import time
import random
import undetected_chromedriver as uc
from selenium.webdriver.common.by import By
from selenium.webdriver.support.ui import WebDriverWait
from selenium.webdriver.support import expected_conditions as EC
from selenium.common.exceptions import TimeoutException, NoSuchElementException
from selenium.webdriver.common.action_chains import ActionChains


# –ù–∞—Å—Ç—Ä–æ–π–∫–∏
COOKIES_FILE = "cookies.json"
USER_LINKS_FILE = "user_links.txt"
LOGIN_URL = "https://qna.habr.com/auth/in"

def human_like_delay():
    """–î–æ–±–∞–≤–ª—è–µ—Ç —Å–ª—É—á–∞–π–Ω—É—é –∑–∞–¥–µ—Ä–∂–∫—É –¥–ª—è –∏–º–∏—Ç–∞—Ü–∏–∏ –ø–æ–≤–µ–¥–µ–Ω–∏—è —á–µ–ª–æ–≤–µ–∫–∞."""
    time.sleep(random.uniform(0.5, 2.0))

def save_cookies(driver):
    """–°–æ—Ö—Ä–∞–Ω—è–µ—Ç –∫—É–∫–∏ –≤ —Ñ–∞–π–ª."""
    with open(COOKIES_FILE, "w") as f:
        json.dump(driver.get_cookies(), f)

def load_cookies(driver):
    """–ó–∞–≥—Ä—É–∂–∞–µ—Ç –∫—É–∫–∏ –∏–∑ —Ñ–∞–π–ª–∞, –µ—Å–ª–∏ –æ–Ω–∏ –µ—Å—Ç—å."""
    if os.path.exists(COOKIES_FILE):
        with open(COOKIES_FILE, "r") as f:
            cookies = json.load(f)
            for cookie in cookies:
                driver.add_cookie(cookie)
        return True
    return False

def manual_login(driver):
    """–ü—Ä–æ—Å–∏—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞—Ç—å—Å—è –≤—Ä—É—á–Ω—É—é."""
    driver.get(LOGIN_URL)
    print("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–ø–æ–ª–Ω–∏—Ç–µ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é –≤—Ä—É—á–Ω—É—é...")
    input("–ù–∞–∂–º–∏—Ç–µ Enter –ø–æ—Å–ª–µ —É—Å–ø–µ—à–Ω–æ–π –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏...")
    save_cookies(driver)

def check_auth(driver):
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç, –≤—ã–ø–æ–ª–Ω–µ–Ω–∞ –ª–∏ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è, –ø–æ –Ω–∞–ª–∏—á–∏—é –±–ª–æ–∫–∞ –ø—Ä–æ—Ñ–∏–ª—è."""
    try:
        WebDriverWait(driver, 20).until(
            EC.presence_of_element_located((By.CSS_SELECTOR, "#js-canvas > aside > section.user-panel > div.user-panel_head > div > a"))
        )
        print("‚úÖ –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–æ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∞.")
        return True
    except TimeoutException:
        print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –≤–æ–π—Ç–∏ –≤ –∞–∫–∫–∞—É–Ω—Ç!")
        return False

def delete_user_flow(driver, user_url):
    """–£–¥–∞–ª—è–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ –ø–µ—Ä–µ–¥–∞–Ω–Ω–æ–π —Å—Å—ã–ª–∫–µ."""
    try:
        print(f"üîÑ –û—Ç–∫—Ä—ã–≤–∞—é –ø—Ä–æ—Ñ–∏–ª—å: {user_url}")
        driver.get(user_url)
        human_like_delay()

        # –û–∂–∏–¥–∞–Ω–∏–µ –∫–Ω–æ–ø–∫–∏ "–ú–µ–Ω—é" (—Ç—Ä–∏ —Ç–æ—á–∫–∏) –∏ –∫–ª–∏–∫ –ø–æ –Ω–µ–π
        print("üîπ –û–∂–∏–¥–∞–Ω–∏–µ –∫–Ω–æ–ø–∫–∏ '–ú–µ–Ω—é'")
        menu_button = WebDriverWait(driver, 10).until(
            EC.element_to_be_clickable((By.CSS_SELECTOR, "button.btn.btn_more"))
        )
        driver.execute_script("arguments[0].click();", menu_button)
        human_like_delay()

        # –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–≥—Ä—É–∑–∫–∏ –≤—ã–ø–∞–¥–∞—é—â–µ–≥–æ –º–µ–Ω—é
        print("üîπ –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–≥—Ä—É–∑–∫–∏ –≤—ã–ø–∞–¥–∞—é—â–µ–≥–æ –º–µ–Ω—é")
        WebDriverWait(driver, 5).until(
            EC.presence_of_element_located((By.CSS_SELECTOR, "div.dropdown__menu"))
        )

        # –ö–ª–∏–∫ –ø–æ –∫–Ω–æ–ø–∫–µ "–ù–∞—Å—Ç—Ä–æ–∏—Ç—å" (—Å—Å—ã–ª–∫–∞ –≤ –∞–¥–º–∏–Ω–∫—É)
        print("üîπ –ü–µ—Ä–µ—Ö–æ–¥ –≤ –∞–¥–º–∏–Ω–∫—É")
        options_button = WebDriverWait(driver, 5).until(
            EC.element_to_be_clickable((By.XPATH, "//a[contains(@href, 'cpanel:user')]"))
        )
        driver.execute_script("arguments[0].click();", options_button)
        human_like_delay()

        # –ü–æ–∏—Å–∫ –Ω—É–∂–Ω–æ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–∞
        driver.refresh()
        time.sleep(3)

        WebDriverWait(driver, 15).until(
            EC.presence_of_element_located((By.XPATH, "//a[@href='#sanctions']"))
        )
        sanctions_tab = driver.find_elements(By.XPATH, "//a[@href='#sanctions']")
        print(f"–ù–∞–π–¥–µ–Ω–æ —ç–ª–µ–º–µ–Ω—Ç–æ–≤: {len(sanctions_tab)}")

        # –ö–ª–∏–∫ –ø–æ "–°–∞–Ω–∫—Ü–∏–∏"
        print("üîπ –ö–ª–∏–∫–∞—é –Ω–∞ '–°–∞–Ω–∫—Ü–∏–∏'")
        try:
            # –ù–∞—Ö–æ–¥–∏–º —Å—Å—ã–ª–∫—É "–°–∞–Ω–∫—Ü–∏–∏"
            driver.execute_script("window.location.hash = '#sanctions';")
            sanctions_tab.click()
            sanctions_tab = WebDriverWait(driver, 10).until(
                EC.presence_of_element_located((By.XPATH, "//a[@href='#sanctions']"))
            )

            actions = ActionChains(driver)
            actions.move_to_element(sanctions_tab).click().perform()  # –ù–∞–≤–æ–¥–∏–º –∏ –∫–ª–∏–∫–∞–µ–º

        except TimeoutException:
            print("‚ùå –û—à–∏–±–∫–∞: –°—Å—ã–ª–∫–∞ '–°–∞–Ω–∫—Ü–∏–∏' –Ω–µ –Ω–∞–π–¥–µ–Ω–∞.")
            print("üîé HTML —Å—Ç—Ä–∞–Ω–∏—Ü—ã:", driver.page_source)
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∫–ª–∏–∫–µ –ø–æ —Å–∞–Ω–∫—Ü–∏—è–º: {str(e)}")

        # –ö–ª–∏–∫ –ø–æ –∫–Ω–æ–ø–∫–µ "–£–¥–∞–ª–∏—Ç—å"
        print("üîπ –û–∂–∏–¥–∞–Ω–∏–µ –∫–Ω–æ–ø–∫–∏ '–£–¥–∞–ª–∏—Ç—å'")
        delete_button = WebDriverWait(driver, 20).until(
            EC.element_to_be_clickable((By.ID, "ban_button"))
        )

        # –°–∫—Ä–æ–ª–ª–∏–º –∫ –∫–Ω–æ–ø–∫–µ, —á—Ç–æ–±—ã –æ–Ω–∞ –±—ã–ª–∞ –≤–∏–¥–Ω–∞ –Ω–∞ —ç–∫—Ä–∞–Ω–µ
        driver.execute_script("arguments[0].scrollIntoView();", delete_button)
        time.sleep(1)  # –î–∞–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü–µ –Ω–µ–º–Ω–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏ –Ω–∞ –ø–æ–¥–≥—Ä—É–∑–∫—É

        # –ö–ª–∏–∫–∞–µ–º –ø–æ –∫–Ω–æ–ø–∫–µ
        delete_button.click()
        print("‚úÖ –ö–ª–∏–∫ –ø–æ –∫–Ω–æ–ø–∫–µ '–£–¥–∞–ª–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è' –≤—ã–ø–æ–ª–Ω–µ–Ω.")

        # –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ pop-up
        try:
            WebDriverWait(driver, 5).until(EC.alert_is_present())
            alert = driver.switch_to.alert
            print(f"‚ö†Ô∏è –ü–æ–ø–∞–ø: {alert.text}")
            alert.accept()
            print("‚úÖ Pop-up —É—Å–ø–µ—à–Ω–æ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω.")
        except:
            print("‚ùå Pop-up –Ω–µ –ø–æ—è–≤–∏–ª—Å—è!")

        print(f"‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user_url} —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω.")
        return True

    except TimeoutException as e:
        print(f"‚ùå Timeout –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ {user_url}: {str(e)}")
        return False
    except NoSuchElementException as e:
        print(f"‚ùå –≠–ª–µ–º–µ–Ω—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ {user_url}: {str(e)}")
        return False
    except Exception as e:
        print(f"‚ùå –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ {user_url}: {str(e)}")
        return False

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è –ª–æ–≥–∏–∫–∞ —Å–∫—Ä–∏–ø—Ç–∞."""
    options = uc.ChromeOptions()
    options.add_argument("--disable-blink-features=AutomationControlled")
    options.add_argument("--no-sandbox")
    options.add_argument("--disable-dev-shm-usage")
    options.add_argument("--disable-gpu")
    options.add_argument("--disable-extensions")
    options.add_argument("--disable-popup-blocking")
    options.add_argument("--disable-notifications")

    driver = uc.Chrome(options=options)

    try:
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è —Ñ–∞–π–ª–∞ —Å–æ —Å—Å—ã–ª–∫–∞–º–∏
        if not os.path.exists(USER_LINKS_FILE):
            print(f"‚ùå –§–∞–π–ª {USER_LINKS_FILE} –Ω–µ –Ω–∞–π–¥–µ–Ω!")
            exit(1)

        # –ó–∞–≥—Ä—É–∂–∞–µ–º –∫—É–∫–∏
        driver.get("https://qna.habr.com/")
        if not load_cookies(driver):
            print("‚ö†Ô∏è –ö—É–∫–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã, –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è —Ä—É—á–Ω–∞—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è.")
            manual_login(driver)
        else:
            print("‚úÖ –ö—É–∫–∏ –∑–∞–≥—Ä—É–∂–µ–Ω—ã, –æ–±–Ω–æ–≤–ª—è–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—É.")
            driver.refresh()

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
        if not check_auth(driver):
            print("‚ùå –°–∫—Ä–∏–ø—Ç –∑–∞–≤–µ—Ä—à–µ–Ω –∏–∑-–∑–∞ –æ—à–∏–±–∫–∏ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏.")
            exit(1)

        # –ß–∏—Ç–∞–µ–º —Å—Å—ã–ª–∫–∏ –∏–∑ —Ñ–∞–π–ª–∞
        with open(USER_LINKS_FILE, "r") as f:
            user_links = [line.strip() for line in f.readlines() if line.strip()]

        print(f"üîπ –ó–∞–≥—Ä—É–∂–µ–Ω–æ {len(user_links)} —Å—Å—ã–ª–æ–∫:")
        for link in user_links:
            print(link)

        # –û–±—Ä–∞–±–æ—Ç–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
        for idx, user_url in enumerate(user_links, 1):
            print(f"üîÑ –û–±—Ä–∞–±–æ—Ç–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {idx}/{len(user_links)}: {user_url}")
            delete_user_flow(driver, user_url)
            time.sleep(3)

    except Exception as e:
        print(f"‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {str(e)}")
    finally:
        driver.quit()

if __name__ == "__main__":
    main()
